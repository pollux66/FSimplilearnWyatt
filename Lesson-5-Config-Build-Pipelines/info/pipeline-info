Step
A “step” (often called a “build step”) is a single task that is part of sequence. Steps tell Jenkins what to do.

Node
A “node” is a step that does two things, typically by enlisting help from available executors on agents:
- Schedules the steps contained within it to run by adding them to the Jenkins build queue
  (so that as soon as an executor slot is free on a node, the appropriate steps run).
- Creates a workspace, meaning a file directory specific to a particular job, where resource-intensive
  processing can occur without negatively impacting your pipeline performance. Workspaces last for the duration
  of the tasks assigned to them. (In Jenkins generally, a “node” means any computer that is part of your Jenkins
  installation, whether that computer is used as a controller or as an agent).

Stage
A “stage” is a step that calls supported APIs. Pipeline syntax is comprised of stages. Each stage can have one or
more build steps within it. Familiarity with Jenkins terms such as “controller,” “agent”, and “executor” also helps
with understanding how pipelines work. These terms are not specific to pipelines:

- controller - A “controller” is the basic installation of Jenkins on a computer; it handles tasks for your build
  system. Pipeline scripts are parsed on controllers, and steps wrapped in node blocks are performed on available
  executors.

- agent - An “agent” (formerly "slave") is a computer set up to offload particular projects from the controller.
  Your configuration determines the number and scope of operations that an agent can perform. Operations are
  performed by executors.

- executor - An “executor” is a computational resource for compiling code. It can run on controller or agent
  machines, either by itself or in parallel with other executors. Jenkins assigns a java.lang.Thread to each executor.

